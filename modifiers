
/////
///// Modifiers for SPARCV8
/////

//ac_modifier_encode(low)
//{
//  reloc->Type_F3B.simm13 = reloc->input & 0x3FF;
//
////  reloc->output = reloc->input & 0x3FF;
//}
//
//ac_modifier_decode(low)
//{
//}
//
//ac_modifier_encode(pcrel)
//{
//  reloc->output = (reloc->input - reloc->address) >> 2;
//}
//
//ac_modifier_decode(pcrel)
//{
//  reloc->output = (reloc->input << 2) + reloc->address;
//}
//
//ac_modifier_encode(high)
//{
//  reloc->Type_F2A.imm22 = reloc->input >> 10;
//
////  reloc->output = reloc->input >> 10;
//}
//
//ac_modifier_decode(high)
//{
//}

/////
///// Modifiers for SPARC16
/////

/// pcrel handling for Type_I and Type_XCHG
ac_modifier_encode(pcreli)
{
  // The address is aligned on 2 bytes boundary
  reloc->output = (reloc->input - reloc->address) >> 1;
}

ac_modifier_decode(pcreli)
{
  reloc->output = (reloc->input << 1) + reloc->address;
}

/// Immediate handling for Type_EXT_RI
ac_modifier_encode(immextri)
{
  reloc->Type_EXT_RI.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_RI.simm8 = reloc->input >> 11;
}

ac_modifier_decode(immextri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 3) & 0xff) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// Immediate handling for Type_EXT_RI_S
ac_modifier_encode(immextris)
{
  reloc->Type_EXT_RI.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_RI.imm8 = reloc->input >> 11;
}

ac_modifier_decode(immextris)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 3) & 0xff) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  int o = hi | low;
  reloc->output = o;
}

/// Immediate handling for Type_EXT_RRI
ac_modifier_encode(immextrri)
{
  reloc->Type_EXT_RRI.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_RRI.simm5 = reloc->input >> 11;
}

ac_modifier_decode(immextrri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 6) & 0x1f) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// %hi handling for Type_RI
ac_modifier_encode(highri)
{
  reloc->Type_RI.imm8 = reloc->input >> 24;
}

ac_modifier_decode(highri)
{
  unsigned int insn = (unsigned)reloc->addend;
  reloc->output = (insn >> 3) & 0xff;
}

/// %hi handling for Type_EXT_RI
ac_modifier_encode(highextri)
{
  unsigned int imm21 = reloc->input >> 11;
  reloc->Type_EXT_RI.immext = imm21 & 0x7ff;
  reloc->Type_EXT_RI.imm8 = (imm21 >> 11);
}

ac_modifier_decode(highextri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 3) & 0xff) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// %lo handling for Type_RRI
ac_modifier_encode(lowrri)
{
  reloc->Type_RRI.simm5 = reloc->input & 0x1f;
}

ac_modifier_decode(lowrri)
{
  unsigned int insn = (unsigned)reloc->addend;
  reloc->output = (insn >> 6) & 0x1f;
}

/// %lo handling for Type_EXT_RRI
ac_modifier_encode(lowextrri)
{
  unsigned int input = reloc->input & 0xffff;
  reloc->Type_EXT_RRI.immext = input & 0x7ff;
  reloc->Type_EXT_RRI.simm5 = (input >> 11) & 0x1f;
}

ac_modifier_decode(lowextrri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 6) & 0x1f) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// Immediate handling for Type_I2
ac_modifier_encode(immextii)
{
  reloc->Type_EXT_I2.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_I2.simm9 = reloc->input >> 11;
}

ac_modifier_decode(immextii)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = (insn & 0x1ff) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// Immediate handling for Type_EXT_RI2
ac_modifier_encode(immextriri)
{
  reloc->Type_EXT_RI2.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_RI2.simm6 = reloc->input >> 11;
}

ac_modifier_decode(immextriri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 3) & 0x3f) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// %lo handling for Type_RI2
ac_modifier_encode(lowriri)
{
  reloc->Type_RI2.simm6 = reloc->input & 0x3f;
}

ac_modifier_decode(lowriri)
{
  unsigned int insn = (unsigned)reloc->addend;
  reloc->output = (insn >> 3) & 0x3f;
}

/// %lo handling for Type_EXT_RI2
ac_modifier_encode(lowextriri)
{
  unsigned int input = reloc->input & 0xffff;
  reloc->Type_EXT_RI2.immext = input & 0x7ff;
  reloc->Type_EXT_RI2.simm6 = (input >> 11) & 0x3f;
}

ac_modifier_decode(lowextriri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 3) & 0x3f) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// Immediate handling for Type_EXT_RRI2
ac_modifier_encode(immextrrirri)
{
  reloc->Type_EXT_RRI2.immext = reloc->input & 0x7ff;
  reloc->Type_EXT_RRI2.simm2 = reloc->input >> 11;
}

ac_modifier_decode(immextrrirri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 6) & 0x3) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

/// %lo handling for Type_RRI2
ac_modifier_encode(lowrrirri)
{
  reloc->Type_RRI2.simm2 = reloc->input & 0x3;
}

ac_modifier_decode(lowrrirri)
{
  unsigned int insn = (unsigned)reloc->addend;
  reloc->output = (insn >> 6) & 0x3;
}

/// %lo handling for Type_EXT_RRI2
ac_modifier_encode(lowextrrirri)
{
  unsigned int input = reloc->input & 0xffff;
  reloc->Type_EXT_RRI2.immext = input & 0x7ff;
  reloc->Type_EXT_RRI2.simm2 = (input >> 11) & 0x3;
}

ac_modifier_decode(lowextrrirri)
{
  unsigned int insn = (unsigned)reloc->addend;
  unsigned int hi = ((insn >> 6) & 0x3) << 11;
  unsigned int low = ((insn >> 16) & 0x7ff);
  reloc->output = hi | low;
}

